"use strict";

var $catalog = document.getElementById('catalog');
var $rangeSlider = document.getElementById('range-slider');
var $input0 = document.getElementById('input-0');
var $input1 = document.getElementById('input-1');
var inputs = [$input0, $input1];
var $filterDescription = document.getElementById('filter-description');
var $filterButtons = document.querySelectorAll('.checkbox-title');
var $filterLists = document.querySelectorAll('.catalog__checkbox-wrapper');
var $openBtn = document.getElementById('burger-open');
var $closeBtn = document.getElementById('burger-close');
var $burgerMenu = document.getElementById('burger-menu'); //--------------------------------Выпадающие списки-----------------------------------

if ($catalog) {
  $filterButtons.forEach(function (btn) {
    return btn.addEventListener('click', dropdown);
  }); //клик вне кнопки и выпадающего списка

  window.addEventListener('click', function (event) {
    //.closest ищет родителя любого уровня, если не находит - возвращает null
    if (!event.target.closest('.catalog__category')) dropdown();
  }); //клавиша Esc

  window.addEventListener('keydown', function (event) {
    if (event.code === 'Escape') dropdown();
  });
  textContent($filterDescription, 'Фильтры:', 'Фильтровать по:');
  catalogSwiper();
  window.addEventListener('resize', function () {
    catalogSwiper();
    textContent($filterDescription, 'Фильтры:', 'Фильтровать по:');
    $filterButtons.forEach(function (btn) {
      return btn.addEventListener('click', dropdown);
    });
  });
  textContent($filterDescription, 'Фильтры:', 'Фильтровать по:');

  if (window.innerWidth <= 1100) {
    $filterButtons.forEach(function (button) {
      button.removeAttribute('disabled');
    });
  } else {
    $filterButtons.forEach(function (button) {
      button.setAttribute('disabled', 'disabled');
    });
  }
}

function dropdown() {
  $filterButtons.forEach(function (btn) {
    if (event.target === btn) {
      btn.nextElementSibling.classList.toggle('dropdown-is-active');

      if (btn.classList.contains('btn-is-active')) {
        removeClassWithTimeout(btn);
      } else btn.classList.add('btn-is-active');
    } else {
      removeClassWithTimeout(btn);
      btn.nextElementSibling.classList.remove('dropdown-is-active');
    }

    ;
  });
}

function removeClassWithTimeout(elem) {
  setTimeout(function () {
    elem.classList.remove('btn-is-active');
  }, 200);
}

function textContent(elem, content1, content2) {
  if (window.innerWidth < 1100) {
    elem.textContent = content1;
  } else {
    elem.textContent = content2;
  }
}

function catalogSwiper() {
  var catalogSwiper = new Swiper('#swiper-4', {
    // Optional parameters
    direction: 'horizontal',
    loop: false,
    // режим непрерывного цикла
    // grabCursor: true,
    allowTouchMove: false,
    resizeObserver: true,
    // observer: true,
    // a11y: true,
    grid: {
      rows: 3,
      fill: "row"
    },
    slidesPerView: 2,
    // Количество карточек в строке
    slidesPerGroup: 2,
    //количество столбцов карточек, прокручиваемых за раз
    spaceBetween: 16,
    breakpoints: {
      // when window width is >= 601px
      601: {
        slidesPerView: 2,
        // Количество карточек в строке
        slidesPerGroup: 2,
        //количество столбцов карточек, прокручиваемых за раз
        spaceBetween: 32
      },
      901: {
        slidesPerView: 3,
        // Количество карточек в строке
        slidesPerGroup: 3,
        //количество столбцов карточек, прокручиваемых за раз
        spaceBetween: 32
      }
    },
    pagination: {
      el: ".swiper-pagination",
      clickable: true,
      renderBullet: function renderBullet(index, className) {
        return '<span class="' + className + '">' + (index + 1) + "</span>";
      }
    }
  });
}
"use strict";

var _;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var $citySelect = document.getElementById('city');
var $categorySelect = document.getElementById('category');
var $moreBtn = document.getElementById('more');
var ratingCards = document.querySelectorAll('.rating__item');
var $openBtn = document.getElementById('burger-open');
var $closeBtn = document.getElementById('burger-close');
var $burgerMenu = document.getElementById('burger-menu');
var choices1 = new Choices($citySelect, {
  //запуск плагина
  searchEnabled: false,
  position: 'bottom'
});
var choices2 = new Choices($categorySelect, {
  //запуск плагина
  searchEnabled: false,
  position: 'bottom'
});
var heroSwiper = new Swiper('#swiper-1', {
  // Optional parameters
  direction: 'horizontal',
  loop: true,
  speed: 500,
  grabCursor: true,
  // autoplay: {
  //   delay: 7000,
  //   disableOnInteraction: false, //после взаимодействия с пользователем продолжение автовоспроизведения
  // },
  // If we need pagination
  pagination: {
    el: '.swiper-pagination',
    clickable: true
  }
});
var specialSwiper = new Swiper('#swiper-2', {
  // Optional parameters
  direction: 'horizontal',
  loop: true,
  breakpoints: {
    // when window width is >= 320px
    320: {
      slidesPerView: 1,
      spaceBetween: 10,
      slidesPerColumn: 1,
      slidesPerGroup: 1
    },
    601: {
      slidesPerView: 2,
      spaceBetween: 32 // slidesPerColumn: 2,
      // slidesPerGroup: 2,

    },
    // when window width is >= 601px
    901: {
      slidesPerView: 3,
      spaceBetween: 32 // slidesPerColumn: 2,
      // slidesPerGroup: 2,

    },
    // when window width is >= 1101px
    1101: {
      slidesPerView: "auto",
      // centeredSlides: true,
      // autoHeight: true,
      // slidesPerView: 3,
      // slidesPerColumn: 2,
      spaceBetween: 32,
      grabCursor: true // slidesPerGroup: 3,

    }
  },
  // Navigation arrows
  navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev'
  }
});
var usefulSwiper = new Swiper('#swiper-3', {
  // Optional parameters
  direction: 'horizontal',
  loop: true,
  breakpoints: {
    // when window width is >= 320px
    320: {
      slidesPerView: 1,
      spaceBetween: 10,
      slidesPerColumn: 1,
      slidesPerGroup: 1
    },
    601: {
      slidesPerView: 2,
      spaceBetween: 32 // slidesPerColumn: 2,
      // slidesPerGroup: 2,

    },
    // when window width is >= 601px
    901: {
      slidesPerView: 3,
      spaceBetween: 32 // slidesPerColumn: 2,
      // slidesPerGroup: 2,

    },
    // when window width is >= 1101px
    1101: (_ = {
      slidesPerView: "auto"
    }, _defineProperty(_, "slidesPerView", 2), _defineProperty(_, "spaceBetween", 32), _defineProperty(_, "grabCursor", true), _)
  },
  // Navigation arrows
  navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev'
  }
}); // кнопка "Показать еще"

if ($moreBtn) {
  $moreBtn.addEventListener('click', function () {
    ratingCards.forEach(function (card) {
      return card.style.display = 'block';
    });
    $moreBtn.style.display = 'none';
  });
} // тултип


if (document.getElementById('tooltip')) {
  tippy('#tooltip', {
    content: 'Реплицированные с зарубежных источников, исследования формируют глобальную сеть.'
  });
} // бургер-меню


$openBtn.addEventListener('click', function () {
  $burgerMenu.classList.add('is-active');
});
$closeBtn.addEventListener('click', function () {
  $burgerMenu.classList.remove('is-active');
});
"use strict";

var $productCard = document.getElementById('similar-products');

if ($productCard) {
  var productSwiper = new Swiper('#swiper-5', {
    // Optional parameters
    direction: 'horizontal',
    loop: false,
    // режим непрерывного цикла
    grabCursor: true,
    allowTouchMove: true,
    resizeObserver: true,
    slidesPerView: 2,
    // Количество карточек в строке
    slidesPerGroup: 1,
    //количество столбцов карточек, прокручиваемых за раз
    spaceBetween: 16,
    breakpoints: {
      // when window width is >= 601px
      601: {
        slidesPerView: 2,
        // Количество карточек в строке
        slidesPerGroup: 2,
        //количество столбцов карточек, прокручиваемых за раз
        spaceBetween: 32
      },
      901: {
        slidesPerView: 3,
        // Количество карточек в строке
        slidesPerGroup: 3,
        //количество столбцов карточек, прокручиваемых за раз
        spaceBetween: 32
      },
      1101: {
        slidesPerView: 4,
        // Количество карточек в строке
        slidesPerGroup: 4,
        //количество столбцов карточек, прокручиваемых за раз
        spaceBetween: 32
      }
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev'
    }
  }); //swiper "Thumbs gallery"

  var galleryThumbs = new Swiper('#gallery-thumbs', {
    spaceBetween: 10,
    slidesPerView: 4,
    freeMode: true,
    watchSlidesProgress: true,
    breakpoints: {
      // when window width is >= 601px
      320: {
        direction: 'horizontal'
      },
      601: {
        direction: 'vertical'
      },
      901: {
        direction: 'horizontal'
      }
    }
  });
  var galleryTop = new Swiper('#gallery-top', {
    spaceBetween: 10,
    thumbs: {
      swiper: galleryThumbs
    }
  }); //----------------modal-swiper----------------------

  var modalGalleryThumbs = new Swiper('#modal-gallery-thumbs', {
    // freeMode: true,
    watchSlidesProgress: true,
    direction: 'horizontal',
    spaceBetween: 78,
    breakpoints: {
      // when window width is >= 601px
      320: {
        slidesPerView: 1
      },
      750: {
        slidesPerView: 2
      },
      901: {
        slidesPerView: 3
      },
      1101: {
        slidesPerView: 4
      }
    },
    navigation: {
      nextEl: '.modal-swiper-button-next',
      prevEl: '.modal-swiper-button-prev'
    }
  });
  var modalGalleryTop = new Swiper('#modal-gallery-top', {
    spaceBetween: 10,
    thumbs: {
      swiper: modalGalleryThumbs
    }
  }); //--------------------modal-------------------------

  var body = document.body;
  var buttons = document.querySelectorAll('button');
  var modalOverlay = document.querySelector('.modal-overlay ');
  var modals = document.querySelectorAll('.modal');
  buttons.forEach(function (btn) {
    btn.addEventListener('click', function (e) {
      var path = e.currentTarget.getAttribute('data-path');

      if (path) {
        //открытие нужного модального окна
        document.querySelector("[data-target=\"".concat(path, "\"]")).classList.add('modal--visible');
        modalOverlay.classList.add('modal-overlay--visible');
        body.classList.add('no-scroll'); //запрет скролла
      }
    });
  });
  modalOverlay.addEventListener('click', function (e) {
    if (e.target == modalOverlay || e.target.closest('.close-modal')) {
      modalOverlay.classList.remove('modal-overlay--visible');
      body.classList.remove('no-scroll'); //разрешение скролла

      modals.forEach(function (el) {
        el.classList.remove('modal--visible');
      });
    }
  });
}
"use strict";

//-------------------------------RANGE-слайдер-------------------------------------------------
if ($rangeSlider) {
  noUiSlider.create($rangeSlider, {
    start: [2000, 150000],
    connect: true,
    step: 1,
    range: {
      'min': 2000,
      'max': 150000
    }
  }); // Событие 'update' - обновление данных при движении ползунков (values - значение ползунка, handle - номер ползунка (0 или 1)). Это событие полезно, чтобы специально прослушивать перетаскиваемый маркер, игнорируя при этом другие обновления значения ползунка. Это событие также срабатывает при изменении «нажатием». В большинстве случаев 'update'это лучший выбор.

  $rangeSlider.noUiSlider.on('update', function (values, handle) {
    inputs[handle].value = Math.floor(values[handle]);
  }); //функция установки ползунков на позиции, соответствующие значениям input-ов (i = 0 или 1; value - значение в конкретном инпуте)

  var setRangeSlider = function setRangeSlider(i, value) {
    var arr = [null, null];
    arr[i] = value;
    $rangeSlider.noUiSlider.set(arr);
  }; //Это событие аналогично 'change'событиям для обычных элементов. Оно срабатывает, когда пользователь перестает скользить, когда значение ползунка изменяется «нажатием» или при взаимодействии с клавиатурой при вводе цифр в <input>


  inputs.forEach(function (el, index) {
    el.addEventListener('change', function (e) {
      setRangeSlider(index, e.currentTarget.value);
    });
  });
} //------------------------------------------------------------------------------------
"use strict";

var $telephone = document.querySelector("input[type='tel']");
var $form = document.getElementById('contacts-form');
var $modal1 = document.querySelector('[data-target="form-popup"]');
var $modal2 = document.querySelector('[data-target="thanks-popup"]');

if ($telephone) {
  var myMask = new Inputmask("+7 (999)-999-99-99");
  myMask.mask($telephone);
}

if ($form) {
  var openThanks = function openThanks() {
    $modal1.classList.remove('modal--visible');
    $modal2.classList.add('modal--visible');
  };

  new JustValidate('#contacts-form', {
    rules: {
      name: {
        required: true,
        minLength: 2,
        maxLength: 25
      },
      tel: {
        required: true,
        "function": function _function(name, value) {
          var phone = $telephone.inputmask.unmaskedvalue();
          return Number(phone) && phone.length === 10;
        }
      },
      mail: {
        required: true,
        email: true
      },
      checkbox: {
        required: true
      }
    },
    messages: {
      //замена дефолтных сообщений
      name: {
        required: 'Поле обязательно для заполнения!',
        minLength: 'Слишком короткое имя!'
      },
      tel: {
        required: 'Поле обязательно для заполнения!',
        "function": 'Некорректный телефон'
      },
      mail: {
        required: 'Поле обязательно для заполнения!',
        email: 'Недопустимый формат'
      },
      checkbox: {
        required: 'Поле обязательно для заполнения!'
      }
    },
    submitHandler: function submitHandler(thisForm) {
      var formData = new FormData(thisForm);
      var xhr = new XMLHttpRequest();

      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 201) {
            console.log(xhr.readyState, xhr.status);
            console.log('Отправлено!!!!!');
            $form.reset();
            openThanks();
          }
        }
      };

      xhr.open('POST', 'https://jsonplaceholder.typicode.com/posts', true);
      xhr.send(formData);
    },
    colorWrong: '#FF6972' //цвет сообщений валидации и бордера

  });
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGFsb2cuanMiLCJpbmRleC5qcyIsInByb2R1Y3QtY2FyZC5qcyIsInJhbmdlc2xpZGVyLmpzIiwidmFsaWRhdGlvbi5qcyJdLCJuYW1lcyI6WyIkY2F0YWxvZyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCIkcmFuZ2VTbGlkZXIiLCIkaW5wdXQwIiwiJGlucHV0MSIsImlucHV0cyIsIiRmaWx0ZXJEZXNjcmlwdGlvbiIsIiRmaWx0ZXJCdXR0b25zIiwicXVlcnlTZWxlY3RvckFsbCIsIiRmaWx0ZXJMaXN0cyIsIiRvcGVuQnRuIiwiJGNsb3NlQnRuIiwiJGJ1cmdlck1lbnUiLCJmb3JFYWNoIiwiYnRuIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRyb3Bkb3duIiwid2luZG93IiwiZXZlbnQiLCJ0YXJnZXQiLCJjbG9zZXN0IiwiY29kZSIsInRleHRDb250ZW50IiwiY2F0YWxvZ1N3aXBlciIsImlubmVyV2lkdGgiLCJidXR0b24iLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJjb250YWlucyIsInJlbW92ZUNsYXNzV2l0aFRpbWVvdXQiLCJhZGQiLCJyZW1vdmUiLCJlbGVtIiwic2V0VGltZW91dCIsImNvbnRlbnQxIiwiY29udGVudDIiLCJTd2lwZXIiLCJkaXJlY3Rpb24iLCJsb29wIiwiYWxsb3dUb3VjaE1vdmUiLCJyZXNpemVPYnNlcnZlciIsImdyaWQiLCJyb3dzIiwiZmlsbCIsInNsaWRlc1BlclZpZXciLCJzbGlkZXNQZXJHcm91cCIsInNwYWNlQmV0d2VlbiIsImJyZWFrcG9pbnRzIiwicGFnaW5hdGlvbiIsImVsIiwiY2xpY2thYmxlIiwicmVuZGVyQnVsbGV0IiwiaW5kZXgiLCJjbGFzc05hbWUiLCIkY2l0eVNlbGVjdCIsIiRjYXRlZ29yeVNlbGVjdCIsIiRtb3JlQnRuIiwicmF0aW5nQ2FyZHMiLCJjaG9pY2VzMSIsIkNob2ljZXMiLCJzZWFyY2hFbmFibGVkIiwicG9zaXRpb24iLCJjaG9pY2VzMiIsImhlcm9Td2lwZXIiLCJzcGVlZCIsImdyYWJDdXJzb3IiLCJzcGVjaWFsU3dpcGVyIiwic2xpZGVzUGVyQ29sdW1uIiwibmF2aWdhdGlvbiIsIm5leHRFbCIsInByZXZFbCIsInVzZWZ1bFN3aXBlciIsImNhcmQiLCJzdHlsZSIsImRpc3BsYXkiLCJ0aXBweSIsImNvbnRlbnQiLCIkcHJvZHVjdENhcmQiLCJwcm9kdWN0U3dpcGVyIiwiZ2FsbGVyeVRodW1icyIsImZyZWVNb2RlIiwid2F0Y2hTbGlkZXNQcm9ncmVzcyIsImdhbGxlcnlUb3AiLCJ0aHVtYnMiLCJzd2lwZXIiLCJtb2RhbEdhbGxlcnlUaHVtYnMiLCJtb2RhbEdhbGxlcnlUb3AiLCJib2R5IiwiYnV0dG9ucyIsIm1vZGFsT3ZlcmxheSIsInF1ZXJ5U2VsZWN0b3IiLCJtb2RhbHMiLCJlIiwicGF0aCIsImN1cnJlbnRUYXJnZXQiLCJnZXRBdHRyaWJ1dGUiLCJub1VpU2xpZGVyIiwiY3JlYXRlIiwic3RhcnQiLCJjb25uZWN0Iiwic3RlcCIsInJhbmdlIiwib24iLCJ2YWx1ZXMiLCJoYW5kbGUiLCJ2YWx1ZSIsIk1hdGgiLCJmbG9vciIsInNldFJhbmdlU2xpZGVyIiwiaSIsImFyciIsInNldCIsIiR0ZWxlcGhvbmUiLCIkZm9ybSIsIiRtb2RhbDEiLCIkbW9kYWwyIiwibXlNYXNrIiwiSW5wdXRtYXNrIiwibWFzayIsIm9wZW5UaGFua3MiLCJKdXN0VmFsaWRhdGUiLCJydWxlcyIsIm5hbWUiLCJyZXF1aXJlZCIsIm1pbkxlbmd0aCIsIm1heExlbmd0aCIsInRlbCIsInBob25lIiwiaW5wdXRtYXNrIiwidW5tYXNrZWR2YWx1ZSIsIk51bWJlciIsImxlbmd0aCIsIm1haWwiLCJlbWFpbCIsImNoZWNrYm94IiwibWVzc2FnZXMiLCJzdWJtaXRIYW5kbGVyIiwidGhpc0Zvcm0iLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwiY29uc29sZSIsImxvZyIsInJlc2V0Iiwib3BlbiIsInNlbmQiLCJjb2xvcldyb25nIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFFBQVEsR0FBR0MsUUFBUSxDQUFDQyxjQUFULENBQXdCLFNBQXhCLENBQWpCO0FBQ0EsSUFBTUMsWUFBWSxHQUFHRixRQUFRLENBQUNDLGNBQVQsQ0FBd0IsY0FBeEIsQ0FBckI7QUFDQSxJQUFNRSxPQUFPLEdBQUdILFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixTQUF4QixDQUFoQjtBQUNBLElBQU1HLE9BQU8sR0FBR0osUUFBUSxDQUFDQyxjQUFULENBQXdCLFNBQXhCLENBQWhCO0FBQ0EsSUFBTUksTUFBTSxHQUFHLENBQUNGLE9BQUQsRUFBVUMsT0FBVixDQUFmO0FBRUEsSUFBTUUsa0JBQWtCLEdBQUdOLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixvQkFBeEIsQ0FBM0I7QUFDQSxJQUFNTSxjQUFjLEdBQUdQLFFBQVEsQ0FBQ1EsZ0JBQVQsQ0FBMEIsaUJBQTFCLENBQXZCO0FBQ0EsSUFBTUMsWUFBWSxHQUFHVCxRQUFRLENBQUNRLGdCQUFULENBQTBCLDRCQUExQixDQUFyQjtBQUVBLElBQU1FLFFBQVEsR0FBR1YsUUFBUSxDQUFDQyxjQUFULENBQXdCLGFBQXhCLENBQWpCO0FBQ0EsSUFBTVUsU0FBUyxHQUFHWCxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsY0FBeEIsQ0FBbEI7QUFDQSxJQUFNVyxXQUFXLEdBQUdaLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixhQUF4QixDQUFwQixDLENBRUE7O0FBQ0EsSUFBSUYsUUFBSixFQUFjO0FBQ1pRLEVBQUFBLGNBQWMsQ0FBQ00sT0FBZixDQUF1QixVQUFBQyxHQUFHO0FBQUEsV0FBSUEsR0FBRyxDQUFDQyxnQkFBSixDQUFxQixPQUFyQixFQUE4QkMsUUFBOUIsQ0FBSjtBQUFBLEdBQTFCLEVBRFksQ0FHWjs7QUFDQUMsRUFBQUEsTUFBTSxDQUFDRixnQkFBUCxD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LmdldEVsZW1lbnRCeUlkKCdjYXRhbG9nJyk7XG5jb25zdCAkcmFuZ2VTbGlkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmFuZ2Utc2xpZGVyJyk7XG5jb25zdCAkaW5wdXQwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lucHV0LTAnKTtcbmNvbnN0ICRpbnB1dDEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5wdXQtMScpO1xuY29uc3QgaW5wdXRzID0gWyRpbnB1dDAsICRpbnB1dDFdO1xuXG5jb25zdCAkZmlsdGVyRGVzY3JpcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmlsdGVyLWRlc2NyaXB0aW9uJyk7XG5jb25zdCAkZmlsdGVyQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jaGVja2JveC10aXRsZScpO1xuY29uc3QgJGZpbHRlckxpc3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNhdGFsb2dfX2NoZWNrYm94LXdyYXBwZXInKTtcblxuY29uc3QgJG9wZW5CdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnVyZ2VyLW9wZW4nKTtcbmNvbnN0ICRjbG9zZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXJnZXItY2xvc2UnKTtcbmNvbnN0ICRidXJnZXJNZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1cmdlci1tZW51Jyk7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3QktGL0L/QsNC00LDRjtGJ0LjQtSDRgdC/0LjRgdC60LgtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuaWYgKCRjYXRhbG9nKSB7XG4gICRmaWx0ZXJCdXR0b25zLmZvckVhY2goYnRuID0+IGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRyb3Bkb3duKSk7XG5cbiAgLy/QutC70LjQuiDQstC90LUg0LrQvdC+0L/QutC4INC4INCy0YvQv9Cw0LTQsNGO0YnQtdCz0L4g0YHQv9C40YHQutCwXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgIC8vLmNsb3Nlc3Qg0LjRidC10YIg0YDQvtC00LjRgtC10LvRjyDQu9GO0LHQvtCz0L4g0YPRgNC+0LLQvdGPLCDQtdGB0LvQuCDQvdC1INC90LDRhdC+0LTQuNGCIC0g0LLQvtC30LLRgNCw0YnQsNC10YIgbnVsbFxuICAgIGlmICghZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJy5jYXRhbG9nX19jYXRlZ29yeScpKSBkcm9wZG93bigpO1xuICB9KVxuXG4gIC8v0LrQu9Cw0LLQuNGI0LAgRXNjXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XG4gICAgaWYgKGV2ZW50LmNvZGUgPT09ICdFc2NhcGUnKSBkcm9wZG93bigpO1xuICB9KVxuXG4gIHRleHRDb250ZW50KCRmaWx0ZXJEZXNjcmlwdGlvbiwgJ9Ck0LjQu9GM0YLRgNGLOicsICfQpNC40LvRjNGC0YDQvtCy0LDRgtGMINC/0L46Jyk7XG5cbiAgY2F0YWxvZ1N3aXBlcigpO1xuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7XG4gICAgY2F0YWxvZ1N3aXBlcigpO1xuICAgIHRleHRDb250ZW50KCRmaWx0ZXJEZXNjcmlwdGlvbiwgJ9Ck0LjQu9GM0YLRgNGLOicsICfQpNC40LvRjNGC0YDQvtCy0LDRgtGMINC/0L46Jyk7XG4gICAgJGZpbHRlckJ1dHRvbnMuZm9yRWFjaChidG4gPT4gYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZHJvcGRvd24pKTtcbiAgfSlcblxuICB0ZXh0Q29udGVudCgkZmlsdGVyRGVzY3JpcHRpb24sICfQpNC40LvRjNGC0YDRizonLCAn0KTQuNC70YzRgtGA0L7QstCw0YLRjCDQv9C+OicpO1xuXG4gIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8PSAxMTAwKSB7XG4gICAgJGZpbHRlckJ1dHRvbnMuZm9yRWFjaCgoYnV0dG9uKSA9PiB7XG4gICAgICBidXR0b24ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgJGZpbHRlckJ1dHRvbnMuZm9yRWFjaCgoYnV0dG9uKSA9PiB7XG4gICAgICBidXR0b24uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xuICAgIH0pXG4gIH1cbn1cblxuZnVuY3Rpb24gZHJvcGRvd24oKSB7XG4gICRmaWx0ZXJCdXR0b25zLmZvckVhY2goKGJ0bikgPT4ge1xuICAgIGlmIChldmVudC50YXJnZXQgPT09IGJ0bikge1xuICAgICAgYnRuLm5leHRFbGVtZW50U2libGluZy5jbGFzc0xpc3QudG9nZ2xlKCdkcm9wZG93bi1pcy1hY3RpdmUnKTtcbiAgICAgIGlmIChidG4uY2xhc3NMaXN0LmNvbnRhaW5zKCdidG4taXMtYWN0aXZlJykpIHtcbiAgICAgICAgcmVtb3ZlQ2xhc3NXaXRoVGltZW91dChidG4pO1xuICAgICAgfSBlbHNlIGJ0bi5jbGFzc0xpc3QuYWRkKCdidG4taXMtYWN0aXZlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZUNsYXNzV2l0aFRpbWVvdXQoYnRuKTtcbiAgICAgIGJ0bi5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LnJlbW92ZSgnZHJvcGRvd24taXMtYWN0aXZlJyk7XG4gICAgfTtcbiAgfSlcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQ2xhc3NXaXRoVGltZW91dChlbGVtKSB7XG4gIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgIGVsZW0uY2xhc3NMaXN0LnJlbW92ZSgnYnRuLWlzLWFjdGl2ZScpO1xuICB9LCAyMDApO1xufVxuXG5mdW5jdGlvbiB0ZXh0Q29udGVudChlbGVtLCBjb250ZW50MSwgY29udGVudDIpIHtcbiAgaWYgKHdpbmRvdy5pbm5lcldpZHRoIDwgMTEwMCkge1xuICAgIGVsZW0udGV4dENvbnRlbnQgPSBjb250ZW50MTtcbiAgfSBlbHNlIHtcbiAgICBlbGVtLnRleHRDb250ZW50ID0gY29udGVudDI7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2F0YWxvZ1N3aXBlcigpIHtcbiAgY29uc3QgY2F0YWxvZ1N3aXBlciA9IG5ldyBTd2lwZXIoJyNzd2lwZXItNCcsIHtcbiAgICAvLyBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gICAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXG4gICAgbG9vcDogZmFsc2UsIC8vINGA0LXQttC40Lwg0L3QtdC/0YDQtdGA0YvQstC90L7Qs9C+INGG0LjQutC70LBcbiAgICAvLyBncmFiQ3Vyc29yOiB0cnVlLFxuICAgIGFsbG93VG91Y2hNb3ZlOiBmYWxzZSxcbiAgICByZXNpemVPYnNlcnZlcjogdHJ1ZSxcbiAgICAvLyBvYnNlcnZlcjogdHJ1ZSxcbiAgICAvLyBhMTF5OiB0cnVlLFxuICAgIGdyaWQ6IHtcbiAgICAgIHJvd3M6IDMsXG4gICAgICBmaWxsOiBcInJvd1wiXG4gICAgfSxcbiAgICBzbGlkZXNQZXJWaWV3OiAyLCAvLyDQmtC+0LvQuNGH0LXRgdGC0LLQviDQutCw0YDRgtC+0YfQtdC6INCyINGB0YLRgNC+0LrQtVxuICAgIHNsaWRlc1Blckdyb3VwOiAyLCAvL9C60L7Qu9C40YfQtdGB0YLQstC+INGB0YLQvtC70LHRhtC+0LIg0LrQsNGA0YLQvtGH0LXQuiwg0L/RgNC+0LrRgNGD0YfQuNCy0LDQtdC80YvRhSDQt9CwINGA0LDQt1xuICAgIHNwYWNlQmV0d2VlbjogMTYsXG5cbiAgICBicmVha3BvaW50czoge1xuICAgICAgLy8gd2hlbiB3aW5kb3cgd2lkdGggaXMgPj0gNjAxcHhcbiAgICAgIDYwMToge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiAyLCAvLyDQmtC+0LvQuNGH0LXRgdGC0LLQviDQutCw0YDRgtC+0YfQtdC6INCyINGB0YLRgNC+0LrQtVxuICAgICAgICBzbGlkZXNQZXJHcm91cDogMiwgLy/QutC+0LvQuNGH0LXRgdGC0LLQviDRgdGC0L7Qu9Cx0YbQvtCyINC60LDRgNGC0L7Rh9C10LosINC/0YDQvtC60YDRg9GH0LjQstCw0LXQvNGL0YUg0LfQsCDRgNCw0LdcbiAgICAgICAgc3BhY2VCZXR3ZWVuOiAzMixcbiAgICAgIH0sXG5cbiAgICAgIDkwMToge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiAzLCAvLyDQmtC+0LvQuNGH0LXRgdGC0LLQviDQutCw0YDRgtC+0YfQtdC6INCyINGB0YLRgNC+0LrQtVxuICAgICAgICBzbGlkZXNQZXJHcm91cDogMywgLy/QutC+0LvQuNGH0LXRgdGC0LLQviDRgdGC0L7Qu9Cx0YbQvtCyINC60LDRgNGC0L7Rh9C10LosINC/0YDQvtC60YDRg9GH0LjQstCw0LXQvNGL0YUg0LfQsCDRgNCw0LdcbiAgICAgICAgc3BhY2VCZXR3ZWVuOiAzMixcbiAgICAgIH1cbiAgICB9LFxuICAgIHBhZ2luYXRpb246IHtcbiAgICAgIGVsOiBcIi5zd2lwZXItcGFnaW5hdGlvblwiLFxuICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgcmVuZGVyQnVsbGV0OiBmdW5jdGlvbiAoaW5kZXgsIGNsYXNzTmFtZSkge1xuICAgICAgICByZXR1cm4gJzxzcGFuIGNsYXNzPVwiJyArIGNsYXNzTmFtZSArICdcIj4nICsgKGluZGV4ICsgMSkgKyBcIjwvc3Bhbj5cIjtcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG59XG4iLCJjb25zdCAkY2l0eVNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaXR5Jyk7XHJcbmNvbnN0ICRjYXRlZ29yeVNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYXRlZ29yeScpO1xyXG5jb25zdCAkbW9yZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb3JlJyk7XHJcbmNvbnN0IHJhdGluZ0NhcmRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnJhdGluZ19faXRlbScpO1xyXG5jb25zdCAkb3BlbkJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXJnZXItb3BlbicpO1xyXG5jb25zdCAkY2xvc2VCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnVyZ2VyLWNsb3NlJyk7XHJcbmNvbnN0ICRidXJnZXJNZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1cmdlci1tZW51Jyk7XHJcblxyXG5jb25zdCBjaG9pY2VzMSA9IG5ldyBDaG9pY2VzKCRjaXR5U2VsZWN0LCB7ICAgLy/Qt9Cw0L/Rg9GB0Log0L/Qu9Cw0LPQuNC90LBcclxuICBzZWFyY2hFbmFibGVkOiBmYWxzZSxcclxuICBwb3NpdGlvbjogJ2JvdHRvbScsXHJcbn0pO1xyXG5cclxuY29uc3QgY2hvaWNlczIgPSBuZXcgQ2hvaWNlcygkY2F0ZWdvcnlTZWxlY3QsIHsgICAvL9C30LDQv9GD0YHQuiDQv9C70LDQs9C40L3QsFxyXG4gIHNlYXJjaEVuYWJsZWQ6IGZhbHNlLFxyXG4gIHBvc2l0aW9uOiAnYm90dG9tJyxcclxufSk7XHJcblxyXG5jb25zdCBoZXJvU3dpcGVyID0gbmV3IFN3aXBlcignI3N3aXBlci0xJywge1xyXG4gIC8vIE9wdGlvbmFsIHBhcmFtZXRlcnNcclxuICBkaXJlY3Rpb246ICdob3Jpem9udGFsJyxcclxuICBsb29wOiB0cnVlLFxyXG4gIHNwZWVkOiA1MDAsXHJcbiAgZ3JhYkN1cnNvcjogdHJ1ZSxcclxuICAvLyBhdXRvcGxheToge1xyXG4gIC8vICAgZGVsYXk6IDcwMDAsXHJcbiAgLy8gICBkaXNhYmxlT25JbnRlcmFjdGlvbjogZmFsc2UsIC8v0L/QvtGB0LvQtSDQstC30LDQuNC80L7QtNC10LnRgdGC0LLQuNGPINGBINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC8INC/0YDQvtC00L7Qu9C20LXQvdC40LUg0LDQstGC0L7QstC+0YHQv9GA0L7QuNC30LLQtdC00LXQvdC40Y9cclxuICAvLyB9LFxyXG5cclxuICAvLyBJZiB3ZSBuZWVkIHBhZ2luYXRpb25cclxuICBwYWdpbmF0aW9uOiB7XHJcbiAgICBlbDogJy5zd2lwZXItcGFnaW5hdGlvbicsXHJcbiAgICBjbGlja2FibGU6IHRydWUsXHJcbiAgfSxcclxufSk7XHJcblxyXG5jb25zdCBzcGVjaWFsU3dpcGVyID0gbmV3IFN3aXBlcignI3N3aXBlci0yJywge1xyXG4gIC8vIE9wdGlvbmFsIHBhcmFtZXRlcnNcclxuICBkaXJlY3Rpb246ICdob3Jpem9udGFsJyxcclxuICBsb29wOiB0cnVlLFxyXG4gIGJyZWFrcG9pbnRzOiB7XHJcbiAgICAvLyB3aGVuIHdpbmRvdyB3aWR0aCBpcyA+PSAzMjBweFxyXG4gICAgMzIwOiB7XHJcbiAgICAgIHNsaWRlc1BlclZpZXc6IDEsXHJcbiAgICAgIHNwYWNlQmV0d2VlbjogMTAsXHJcbiAgICAgIHNsaWRlc1BlckNvbHVtbjogMSxcclxuICAgICAgc2xpZGVzUGVyR3JvdXA6IDEsXHJcbiAgICB9LFxyXG4gICAgNjAxOiB7XHJcbiAgICAgIHNsaWRlc1BlclZpZXc6IDIsXHJcbiAgICAgIHNwYWNlQmV0d2VlbjogMzIsXHJcbiAgICAgIC8vIHNsaWRlc1BlckNvbHVtbjogMixcclxuICAgICAgLy8gc2xpZGVzUGVyR3JvdXA6IDIsXHJcbiAgICB9LFxyXG4gICAgLy8gd2hlbiB3aW5kb3cgd2lkdGggaXMgPj0gNjAxcHhcclxuICAgIDkwMToge1xyXG4gICAgICBzbGlkZXNQZXJWaWV3OiAzLFxyXG4gICAgICBzcGFjZUJldHdlZW46IDMyLFxyXG4gICAgICAvLyBzbGlkZXNQZXJDb2x1bW46IDIsXHJcbiAgICAgIC8vIHNsaWRlc1Blckdyb3VwOiAyLFxyXG4gICAgfSxcclxuICAgIC8vIHdoZW4gd2luZG93IHdpZHRoIGlzID49IDExMDFweFxyXG4gICAgMTEwMToge1xyXG4gICAgICBzbGlkZXNQZXJWaWV3OiBcImF1dG9cIixcclxuICAgICAgLy8gY2VudGVyZWRTbGlkZXM6IHRydWUsXHJcbiAgICAgIC8vIGF1dG9IZWlnaHQ6IHRydWUsXHJcbiAgICAgIC8vIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgICAgIC8vIHNsaWRlc1BlckNvbHVtbjogMixcclxuICAgICAgc3BhY2VCZXR3ZWVuOiAzMixcclxuICAgICAgZ3JhYkN1cnNvcjogdHJ1ZSxcclxuICAgICAgLy8gc2xpZGVzUGVyR3JvdXA6IDMsXHJcbiAgICB9XHJcbiAgfSxcclxuICAvLyBOYXZpZ2F0aW9uIGFycm93c1xyXG4gIG5hdmlnYXRpb246IHtcclxuICAgIG5leHRFbDogJy5zd2lwZXItYnV0dG9uLW5leHQnLFxyXG4gICAgcHJldkVsOiAnLnN3aXBlci1idXR0b24tcHJldicsXHJcbiAgfSxcclxufSk7XHJcblxyXG5jb25zdCB1c2VmdWxTd2lwZXIgPSBuZXcgU3dpcGVyKCcjc3dpcGVyLTMnLCB7XHJcbiAgLy8gT3B0aW9uYWwgcGFyYW1ldGVyc1xyXG4gIGRpcmVjdGlvbjogJ2hvcml6b250YWwnLFxyXG4gIGxvb3A6IHRydWUsXHJcbiAgYnJlYWtwb2ludHM6IHtcclxuICAgIC8vIHdoZW4gd2luZG93IHdpZHRoIGlzID49IDMyMHB4XHJcbiAgICAzMjA6IHtcclxuICAgICAgc2xpZGVzUGVyVmlldzogMSxcclxuICAgICAgc3BhY2VCZXR3ZWVuOiAxMCxcclxuICAgICAgc2xpZGVzUGVyQ29sdW1uOiAxLFxyXG4gICAgICBzbGlkZXNQZXJHcm91cDogMSxcclxuICAgIH0sXHJcbiAgICA2MDE6IHtcclxuICAgICAgc2xpZGVzUGVyVmlldzogMixcclxuICAgICAgc3BhY2VCZXR3ZWVuOiAzMixcclxuICAgICAgLy8gc2xpZGVzUGVyQ29sdW1uOiAyLFxyXG4gICAgICAvLyBzbGlkZXNQZXJHcm91cDogMixcclxuICAgIH0sXHJcbiAgICAvLyB3aGVuIHdpbmRvdyB3aWR0aCBpcyA+PSA2MDFweFxyXG4gICAgOTAxOiB7XHJcbiAgICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgICAgIHNwYWNlQmV0d2VlbjogMzIsXHJcbiAgICAgIC8vIHNsaWRlc1BlckNvbHVtbjogMixcclxuICAgICAgLy8gc2xpZGVzUGVyR3JvdXA6IDIsXHJcbiAgICB9LFxyXG4gICAgLy8gd2hlbiB3aW5kb3cgd2lkdGggaXMgPj0gMTEwMXB4XHJcbiAgICAxMTAxOiB7XHJcbiAgICAgIHNsaWRlc1BlclZpZXc6IFwiYXV0b1wiLFxyXG4gICAgICAvLyBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgLy8gYXV0b0hlaWdodDogdHJ1ZSxcclxuICAgICAgc2xpZGVzUGVyVmlldzogMixcclxuICAgICAgLy8gc2xpZGVzUGVyQ29sdW1uOiAyLFxyXG4gICAgICBzcGFjZUJldHdlZW46IDMyLFxyXG4gICAgICBncmFiQ3Vyc29yOiB0cnVlLFxyXG4gICAgICAvLyBzbGlkZXNQZXJHcm91cDogMyxcclxuICAgIH1cclxuICB9LFxyXG4gIC8vIE5hdmlnYXRpb24gYXJyb3dzXHJcbiAgbmF2aWdhdGlvbjoge1xyXG4gICAgbmV4dEVsOiAnLnN3aXBlci1idXR0b24tbmV4dCcsXHJcbiAgICBwcmV2RWw6ICcuc3dpcGVyLWJ1dHRvbi1wcmV2JyxcclxuICB9LFxyXG59KTtcclxuXHJcbi8vINC60L3QvtC/0LrQsCBcItCf0L7QutCw0LfQsNGC0Ywg0LXRidC1XCJcclxuaWYgKCRtb3JlQnRuKSB7XHJcbiAgJG1vcmVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICByYXRpbmdDYXJkcy5mb3JFYWNoKGNhcmQgPT4gY2FyZC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJyk7XHJcbiAgICAkbW9yZUJ0bi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gIH0pO1xyXG59XHJcblxyXG4vLyDRgtGD0LvRgtC40L9cclxuaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b29sdGlwJykpIHtcclxuICB0aXBweSgnI3Rvb2x0aXAnLCB7XHJcbiAgICBjb250ZW50OiAn0KDQtdC/0LvQuNGG0LjRgNC+0LLQsNC90L3Ri9C1INGBINC30LDRgNGD0LHQtdC20L3Ri9GFINC40YHRgtC+0YfQvdC40LrQvtCyLCDQuNGB0YHQu9C10LTQvtCy0LDQvdC40Y8g0YTQvtGA0LzQuNGA0YPRjtGCINCz0LvQvtCx0LDQu9GM0L3Rg9GOINGB0LXRgtGMLicsIFxyXG4gIH0pO1xyXG59XHJcblxyXG4vLyDQsdGD0YDQs9C10YAt0LzQtdC90Y5cclxuJG9wZW5CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgJGJ1cmdlck1lbnUuY2xhc3NMaXN0LmFkZCgnaXMtYWN0aXZlJyk7XHJcbn0pXHJcblxyXG4kY2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgJGJ1cmdlck1lbnUuY2xhc3NMaXN0LnJlbW92ZSgnaXMtYWN0aXZlJyk7XHJcbn0pIiwiY29uc3QgJHByb2R1Y3RDYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NpbWlsYXItcHJvZHVjdHMnKTtcblxuaWYgKCRwcm9kdWN0Q2FyZCkge1xuICBjb25zdCBwcm9kdWN0U3dpcGVyID0gbmV3IFN3aXBlcignI3N3aXBlci01Jywge1xuICAgIC8vIE9wdGlvbmFsIHBhcmFtZXRlcnNcbiAgICBkaXJlY3Rpb246ICdob3Jpem9udGFsJyxcbiAgICBsb29wOiBmYWxzZSwgLy8g0YDQtdC20LjQvCDQvdC10L/RgNC10YDRi9Cy0L3QvtCz0L4g0YbQuNC60LvQsFxuICAgIGdyYWJDdXJzb3I6IHRydWUsXG4gICAgYWxsb3dUb3VjaE1vdmU6IHRydWUsXG4gICAgcmVzaXplT2JzZXJ2ZXI6IHRydWUsXG4gICAgc2xpZGVzUGVyVmlldzogMiwgLy8g0JrQvtC70LjRh9C10YHRgtCy0L4g0LrQsNGA0YLQvtGH0LXQuiDQsiDRgdGC0YDQvtC60LVcbiAgICBzbGlkZXNQZXJHcm91cDogMSwgLy/QutC+0LvQuNGH0LXRgdGC0LLQviDRgdGC0L7Qu9Cx0YbQvtCyINC60LDRgNGC0L7Rh9C10LosINC/0YDQvtC60YDRg9GH0LjQstCw0LXQvNGL0YUg0LfQsCDRgNCw0LdcbiAgICBzcGFjZUJldHdlZW46IDE2LFxuXG4gICAgYnJlYWtwb2ludHM6IHtcbiAgICAgIC8vIHdoZW4gd2luZG93IHdpZHRoIGlzID49IDYwMXB4XG4gICAgICA2MDE6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMiwgLy8g0JrQvtC70LjRh9C10YHRgtCy0L4g0LrQsNGA0YLQvtGH0LXQuiDQsiDRgdGC0YDQvtC60LVcbiAgICAgICAgc2xpZGVzUGVyR3JvdXA6IDIsIC8v0LrQvtC70LjRh9C10YHRgtCy0L4g0YHRgtC+0LvQsdGG0L7QsiDQutCw0YDRgtC+0YfQtdC6LCDQv9GA0L7QutGA0YPRh9C40LLQsNC10LzRi9GFINC30LAg0YDQsNC3XG4gICAgICAgIHNwYWNlQmV0d2VlbjogMzIsXG4gICAgICB9LFxuXG4gICAgICA5MDE6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMywgLy8g0JrQvtC70LjRh9C10YHRgtCy0L4g0LrQsNGA0YLQvtGH0LXQuiDQsiDRgdGC0YDQvtC60LVcbiAgICAgICAgc2xpZGVzUGVyR3JvdXA6IDMsIC8v0LrQvtC70LjRh9C10YHRgtCy0L4g0YHRgtC+0LvQsdGG0L7QsiDQutCw0YDRgtC+0YfQtdC6LCDQv9GA0L7QutGA0YPRh9C40LLQsNC10LzRi9GFINC30LAg0YDQsNC3XG4gICAgICAgIHNwYWNlQmV0d2VlbjogMzIsXG4gICAgICB9LFxuXG4gICAgICAxMTAxOiB7XG4gICAgICAgIHNsaWRlc1BlclZpZXc6IDQsIC8vINCa0L7Qu9C40YfQtdGB0YLQstC+INC60LDRgNGC0L7Rh9C10Log0LIg0YHRgtGA0L7QutC1XG4gICAgICAgIHNsaWRlc1Blckdyb3VwOiA0LCAvL9C60L7Qu9C40YfQtdGB0YLQstC+INGB0YLQvtC70LHRhtC+0LIg0LrQsNGA0YLQvtGH0LXQuiwg0L/RgNC+0LrRgNGD0YfQuNCy0LDQtdC80YvRhSDQt9CwINGA0LDQt1xuICAgICAgICBzcGFjZUJldHdlZW46IDMyLFxuICAgICAgfVxuICAgIH0sXG4gICAgbmF2aWdhdGlvbjoge1xuICAgICAgbmV4dEVsOiAnLnN3aXBlci1idXR0b24tbmV4dCcsXG4gICAgICBwcmV2RWw6ICcuc3dpcGVyLWJ1dHRvbi1wcmV2JyxcbiAgICB9LFxuICB9KTtcblxuICAvL3N3aXBlciBcIlRodW1icyBnYWxsZXJ5XCJcbiAgY29uc3QgZ2FsbGVyeVRodW1icyA9IG5ldyBTd2lwZXIoJyNnYWxsZXJ5LXRodW1icycsIHtcbiAgICBzcGFjZUJldHdlZW46IDEwLFxuICAgIHNsaWRlc1BlclZpZXc6IDQsXG4gICAgZnJlZU1vZGU6IHRydWUsXG4gICAgd2F0Y2hTbGlkZXNQcm9ncmVzczogdHJ1ZSxcbiAgICBicmVha3BvaW50czoge1xuICAgICAgLy8gd2hlbiB3aW5kb3cgd2lkdGggaXMgPj0gNjAxcHhcbiAgICAgIDMyMDoge1xuICAgICAgICBkaXJlY3Rpb246ICdob3Jpem9udGFsJyxcbiAgICAgIH0sXG5cbiAgICAgIDYwMToge1xuICAgICAgICBkaXJlY3Rpb246ICd2ZXJ0aWNhbCcsXG4gICAgICB9LFxuXG4gICAgICA5MDE6IHtcbiAgICAgICAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXG4gICAgICB9LFxuICAgIH0sXG4gIH0pO1xuICBjb25zdCBnYWxsZXJ5VG9wID0gbmV3IFN3aXBlcignI2dhbGxlcnktdG9wJywge1xuICAgIHNwYWNlQmV0d2VlbjogMTAsXG4gICAgdGh1bWJzOiB7XG4gICAgICBzd2lwZXI6IGdhbGxlcnlUaHVtYnNcbiAgICB9XG4gIH0pO1xuXG4gIC8vLS0tLS0tLS0tLS0tLS0tLW1vZGFsLXN3aXBlci0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgY29uc3QgbW9kYWxHYWxsZXJ5VGh1bWJzID0gbmV3IFN3aXBlcignI21vZGFsLWdhbGxlcnktdGh1bWJzJywge1xuICAgIC8vIGZyZWVNb2RlOiB0cnVlLFxuICAgIHdhdGNoU2xpZGVzUHJvZ3Jlc3M6IHRydWUsXG4gICAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXG4gICAgc3BhY2VCZXR3ZWVuOiA3OCxcbiAgICBicmVha3BvaW50czoge1xuICAgICAgLy8gd2hlbiB3aW5kb3cgd2lkdGggaXMgPj0gNjAxcHhcbiAgICAgIDMyMDoge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiAxLFxuICAgICAgfSxcblxuICAgICAgNzUwOiB7XG4gICAgICAgIHNsaWRlc1BlclZpZXc6IDIsXG4gICAgICB9LFxuXG4gICAgICA5MDE6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMyxcbiAgICAgIH0sXG5cbiAgICAgIDExMDE6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogNCxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBuYXZpZ2F0aW9uOiB7XG4gICAgICBuZXh0RWw6ICcubW9kYWwtc3dpcGVyLWJ1dHRvbi1uZXh0JyxcbiAgICAgIHByZXZFbDogJy5tb2RhbC1zd2lwZXItYnV0dG9uLXByZXYnLFxuICAgIH0sXG4gIH0pO1xuICBjb25zdCBtb2RhbEdhbGxlcnlUb3AgPSBuZXcgU3dpcGVyKCcjbW9kYWwtZ2FsbGVyeS10b3AnLCB7XG4gICAgc3BhY2VCZXR3ZWVuOiAxMCxcbiAgICB0aHVtYnM6IHtcbiAgICAgIHN3aXBlcjogbW9kYWxHYWxsZXJ5VGh1bWJzXG4gICAgfVxuICB9KTtcblxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tbW9kYWwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5ib2R5O1xuICBjb25zdCBidXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uJyk7XG4gIGNvbnN0IG1vZGFsT3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1vdmVybGF5ICcpO1xuICBjb25zdCBtb2RhbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubW9kYWwnKTtcblxuICBidXR0b25zLmZvckVhY2goKGJ0bikgPT4ge1xuICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBsZXQgcGF0aCA9IGUuY3VycmVudFRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtcGF0aCcpO1xuXG4gICAgICBpZiAocGF0aCkge1xuICAgICAgICAvL9C+0YLQutGA0YvRgtC40LUg0L3Rg9C20L3QvtCz0L4g0LzQvtC00LDQu9GM0L3QvtCz0L4g0L7QutC90LBcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgW2RhdGEtdGFyZ2V0PVwiJHtwYXRofVwiXWApLmNsYXNzTGlzdC5hZGQoJ21vZGFsLS12aXNpYmxlJyk7XG4gICAgICAgIG1vZGFsT3ZlcmxheS5jbGFzc0xpc3QuYWRkKCdtb2RhbC1vdmVybGF5LS12aXNpYmxlJyk7XG4gICAgICAgIGJvZHkuY2xhc3NMaXN0LmFkZCgnbm8tc2Nyb2xsJyk7IC8v0LfQsNC/0YDQtdGCINGB0LrRgNC+0LvQu9CwXG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuXG4gIG1vZGFsT3ZlcmxheS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgaWYgKChlLnRhcmdldCA9PSBtb2RhbE92ZXJsYXkpIHx8IChlLnRhcmdldC5jbG9zZXN0KCcuY2xvc2UtbW9kYWwnKSkpIHtcbiAgICAgIG1vZGFsT3ZlcmxheS5jbGFzc0xpc3QucmVtb3ZlKCdtb2RhbC1vdmVybGF5LS12aXNpYmxlJyk7XG4gICAgICBib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ25vLXNjcm9sbCcpOyAvL9GA0LDQt9GA0LXRiNC10L3QuNC1INGB0LrRgNC+0LvQu9CwXG4gICAgICBtb2RhbHMuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWwtLXZpc2libGUnKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59XG4iLCIvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1SQU5HRS3RgdC70LDQudC00LXRgC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmlmICgkcmFuZ2VTbGlkZXIpIHtcbiAgbm9VaVNsaWRlci5jcmVhdGUoJHJhbmdlU2xpZGVyLCB7XG4gICAgICBzdGFydDogWzIwMDAsIDE1MDAwMF0sXG4gICAgICBjb25uZWN0OiB0cnVlLFxuICAgICAgc3RlcDogMSxcbiAgICAgIHJhbmdlOiB7XG4gICAgICAgICAgJ21pbic6IDIwMDAsXG4gICAgICAgICAgJ21heCc6IDE1MDAwMFxuICAgICAgfVxuICB9KTtcblxuICAvLyDQodC+0LHRi9GC0LjQtSAndXBkYXRlJyAtINC+0LHQvdC+0LLQu9C10L3QuNC1INC00LDQvdC90YvRhSDQv9GA0Lgg0LTQstC40LbQtdC90LjQuCDQv9C+0LvQt9GD0L3QutC+0LIgKHZhbHVlcyAtINC30L3QsNGH0LXQvdC40LUg0L/QvtC70LfRg9C90LrQsCwgaGFuZGxlIC0g0L3QvtC80LXRgCDQv9C+0LvQt9GD0L3QutCwICgwINC40LvQuCAxKSkuINCt0YLQviDRgdC+0LHRi9GC0LjQtSDQv9C+0LvQtdC30L3Qviwg0YfRgtC+0LHRiyDRgdC/0LXRhtC40LDQu9GM0L3QviDQv9GA0L7RgdC70YPRiNC40LLQsNGC0Ywg0L/QtdGA0LXRgtCw0YHQutC40LLQsNC10LzRi9C5INC80LDRgNC60LXRgCwg0LjQs9C90L7RgNC40YDRg9GPINC/0YDQuCDRjdGC0L7QvCDQtNGA0YPQs9C40LUg0L7QsdC90L7QstC70LXQvdC40Y8g0LfQvdCw0YfQtdC90LjRjyDQv9C+0LvQt9GD0L3QutCwLiDQrdGC0L4g0YHQvtCx0YvRgtC40LUg0YLQsNC60LbQtSDRgdGA0LDQsdCw0YLRi9Cy0LDQtdGCINC/0YDQuCDQuNC30LzQtdC90LXQvdC40LggwqvQvdCw0LbQsNGC0LjQtdC8wrsuINCSINCx0L7Qu9GM0YjQuNC90YHRgtCy0LUg0YHQu9GD0YfQsNC10LIgJ3VwZGF0ZSfRjdGC0L4g0LvRg9GH0YjQuNC5INCy0YvQsdC+0YAuXG4gICRyYW5nZVNsaWRlci5ub1VpU2xpZGVyLm9uKCd1cGRhdGUnLCBmdW5jdGlvbih2YWx1ZXMsIGhhbmRsZSl7XG4gICAgaW5wdXRzW2hhbmRsZV0udmFsdWUgPSBNYXRoLmZsb29yKHZhbHVlc1toYW5kbGVdKTtcbiAgfSk7XG5cbiAgLy/RhNGD0L3QutGG0LjRjyDRg9GB0YLQsNC90L7QstC60Lgg0L/QvtC70LfRg9C90LrQvtCyINC90LAg0L/QvtC30LjRhtC40LgsINGB0L7QvtGC0LLQtdGC0YHRgtCy0YPRjtGJ0LjQtSDQt9C90LDRh9C10L3QuNGP0LwgaW5wdXQt0L7QsiAoaSA9IDAg0LjQu9C4IDE7IHZhbHVlIC0g0LfQvdCw0YfQtdC90LjQtSDQsiDQutC+0L3QutGA0LXRgtC90L7QvCDQuNC90L/Rg9GC0LUpXG4gIGNvbnN0IHNldFJhbmdlU2xpZGVyID0gKGksIHZhbHVlKSA9PiB7XG4gICAgbGV0IGFyciA9IFtudWxsLCBudWxsXTtcbiAgICBhcnJbaV0gPSB2YWx1ZTtcbiAgICAkcmFuZ2VTbGlkZXIubm9VaVNsaWRlci5zZXQoYXJyKTtcbiAgfTtcblxuICAvL9Ct0YLQviDRgdC+0LHRi9GC0LjQtSDQsNC90LDQu9C+0LPQuNGH0L3QviAnY2hhbmdlJ9GB0L7QsdGL0YLQuNGP0Lwg0LTQu9GPINC+0LHRi9GH0L3Ri9GFINGN0LvQtdC80LXQvdGC0L7Qsi4g0J7QvdC+INGB0YDQsNCx0LDRgtGL0LLQsNC10YIsINC60L7Qs9C00LAg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GMINC/0LXRgNC10YHRgtCw0LXRgiDRgdC60L7Qu9GM0LfQuNGC0YwsINC60L7Qs9C00LAg0LfQvdCw0YfQtdC90LjQtSDQv9C+0LvQt9GD0L3QutCwINC40LfQvNC10L3Rj9C10YLRgdGPIMKr0L3QsNC20LDRgtC40LXQvMK7INC40LvQuCDQv9GA0Lgg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjQuCDRgSDQutC70LDQstC40LDRgtGD0YDQvtC5INC/0YDQuCDQstCy0L7QtNC1INGG0LjRhNGAINCyIDxpbnB1dD5cbiAgaW5wdXRzLmZvckVhY2goKGVsLCBpbmRleCkgPT4ge1xuICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7XG4gICAgICBzZXRSYW5nZVNsaWRlcihpbmRleCwgZS5jdXJyZW50VGFyZ2V0LnZhbHVlKTtcbiAgICB9KTtcbiAgfSlcbn1cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4iLCJjb25zdCAkdGVsZXBob25lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImlucHV0W3R5cGU9J3RlbCddXCIpO1xuY29uc3QgJGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFjdHMtZm9ybScpO1xuY29uc3QgJG1vZGFsMSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXRhcmdldD1cImZvcm0tcG9wdXBcIl0nKTtcbmNvbnN0ICRtb2RhbDIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS10YXJnZXQ9XCJ0aGFua3MtcG9wdXBcIl0nKTtcblxuaWYgKCR0ZWxlcGhvbmUpIHtcbiAgdmFyIG15TWFzayA9IG5ldyBJbnB1dG1hc2soXCIrNyAoOTk5KS05OTktOTktOTlcIik7XG4gIG15TWFzay5tYXNrKCR0ZWxlcGhvbmUpO1xufVxuXG5pZiAoJGZvcm0pIHtcbiAgbmV3IEp1c3RWYWxpZGF0ZSgnI2NvbnRhY3RzLWZvcm0nLCB7XG4gICAgcnVsZXM6IHtcbiAgICAgIG5hbWU6IHtcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIG1pbkxlbmd0aDogMixcbiAgICAgICAgbWF4TGVuZ3RoOiAyNVxuICAgICAgfSxcblxuICAgICAgdGVsOiB7XG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICBmdW5jdGlvbjogKG5hbWUsIHZhbHVlKSA9PiB7XG4gICAgICAgICAgY29uc3QgcGhvbmUgPSAkdGVsZXBob25lLmlucHV0bWFzay51bm1hc2tlZHZhbHVlKClcbiAgICAgICAgICByZXR1cm4gTnVtYmVyKHBob25lKSAmJiBwaG9uZS5sZW5ndGggPT09IDEwXG4gICAgICAgIH1cbiAgICAgIH0sXG5cbiAgICAgIG1haWw6IHtcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIGVtYWlsOiB0cnVlXG4gICAgICB9LFxuXG4gICAgICBjaGVja2JveDoge1xuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBtZXNzYWdlczogeyAvL9C30LDQvNC10L3QsCDQtNC10YTQvtC70YLQvdGL0YUg0YHQvtC+0LHRidC10L3QuNC5XG4gICAgICBuYW1lOiB7XG4gICAgICAgIHJlcXVpcmVkOiAn0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y8hJyxcbiAgICAgICAgbWluTGVuZ3RoOiAn0KHQu9C40YjQutC+0Lwg0LrQvtGA0L7RgtC60L7QtSDQuNC80Y8hJ1xuICAgICAgfSxcblxuICAgICAgdGVsOiB7XG4gICAgICAgIHJlcXVpcmVkOiAn0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y8hJyxcbiAgICAgICAgZnVuY3Rpb246ICfQndC10LrQvtGA0YDQtdC60YLQvdGL0Lkg0YLQtdC70LXRhNC+0L0nXG4gICAgICB9LFxuXG4gICAgICBtYWlsOiB7XG4gICAgICAgIHJlcXVpcmVkOiAn0J/QvtC70LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3QviDQtNC70Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y8hJyxcbiAgICAgICAgZW1haWw6ICfQndC10LTQvtC/0YPRgdGC0LjQvNGL0Lkg0YTQvtGA0LzQsNGCJ1xuICAgICAgfSxcblxuICAgICAgY2hlY2tib3g6IHtcbiAgICAgICAgcmVxdWlyZWQ6ICfQn9C+0LvQtSDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC00LvRjyDQt9Cw0L/QvtC70L3QtdC90LjRjyEnXG4gICAgICB9LFxuICAgIH0sXG5cbiAgICBzdWJtaXRIYW5kbGVyOiBmdW5jdGlvbih0aGlzRm9ybSkge1xuICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKHRoaXNGb3JtKTtcblxuICAgICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQpIHtcbiAgICAgICAgICBpZiAoeGhyLnN0YXR1cyA9PT0gMjAxKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh4aHIucmVhZHlTdGF0ZSwgeGhyLnN0YXR1cyk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn0J7RgtC/0YDQsNCy0LvQtdC90L4hISEhIScpO1xuICAgICAgICAgICAgJGZvcm0ucmVzZXQoKTtcbiAgICAgICAgICAgIG9wZW5UaGFua3MoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgeGhyLm9wZW4oJ1BPU1QnLCAnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzJywgdHJ1ZSk7XG4gICAgICB4aHIuc2VuZChmb3JtRGF0YSk7XG4gICAgfSxcblxuICAgIGNvbG9yV3Jvbmc6ICcjRkY2OTcyJyAvL9GG0LLQtdGCINGB0L7QvtCx0YnQtdC90LjQuSDQstCw0LvQuNC00LDRhtC40Lgg0Lgg0LHQvtGA0LTQtdGA0LBcbiAgfSlcblxuICBmdW5jdGlvbiBvcGVuVGhhbmtzKCkge1xuICAgICRtb2RhbDEuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWwtLXZpc2libGUnKTtcbiAgICAkbW9kYWwyLmNsYXNzTGlzdC5hZGQoJ21vZGFsLS12aXNpYmxlJyk7XG4gIH1cbn1cbiJdfQ==
